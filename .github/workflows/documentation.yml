# This script detects all Python classes with docstrings in the plugins module
# and writes corresponding .. autoclass:: directives into a .rst file for Sphinx documentation.

name: Build and Test Sphinx Docs

on:
  # Run on pushes to these branches
  push:
    branches: [ "develop", "main" ]
  # Also build on PRs targeting these branches (but we skip deploy on PRs below)
  pull_request:
    branches: [ "develop", "main" ]
  # Allow manual runs from the Actions tab
  workflow_dispatch:

# Permissions required by the official GitHub Pages deployment actions
permissions:
  contents: read   # read-only access to repo contents during build
  pages: write     # allow publishing the Pages artifact
  id-token: write  # OIDC token for actions/deploy-pages

# Ensure only one Pages deploy runs at a time
#concurrency:
#  group: pages
#  cancel-in-progress: true

jobs:
  # Single job that builds docs and (if not a PR) deploys them to GitHub Pages
  build-docs:
    runs-on: ubuntu-latest

    # Required by actions/deploy-pages (names the target environment)
    environment:
      name: github-pages
      # Show the deployed URL in the job summary (provided by deploy step output)
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install a specific Python version for reproducible builds
      - name: Set up Python 3.12.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.10"

      # (Optional) Log the exact Python version used
      - name: Show Python version
        run: python -V

      # Step 3: Install project and docs dependencies
      # - requirements.txt: your project deps (if any used by autodoc)
      # - sphinx + theme: tools to build the docs
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install sphinx furo
          
      # Step 4: Build Sphinx HTML docs
      # Source dir contains conf.py and index.rst: docs/source
      # Output dir (published later): docs/build
      - name: Build Sphinx HTML docs (into `build/`)
        run: sphinx-build -b html docs/source docs/build

      # (Optional) List a subset of the build output for quick sanity check
      - name: List docs/build contents
        run: ls -la docs/build | sed -n '1,120p'

      # ---- Official GitHub Pages flow (Actions-based) ----
      # Configure the Pages environment for this job
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Upload only the built site (docs/build) as the Pages artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build
          # name: github-pages  # (optional) change if you want a custom artifact name

      # Deploy the uploaded artifact to GitHub Pages
      # We skip deploy on pull_request events to avoid publishing previews
      - name: Deploy to GitHub Pages
        if: github.event_name != 'pull_request'  # skip deploy on PRs
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages   # explicitly deploy the uploaded artifact

      # Step 6 (optional/testing): also upload the built site as a regular CI artifact
      # Handy for inspecting the exact HTML bundle from the run
      - name: Upload HTML docs
        uses: actions/upload-artifact@v4
        with:
          name: sphinx-html-docs
          path: docs/build
